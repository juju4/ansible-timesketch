---

- name: Debian | requirements
  include: debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Redhat | requirements
  include: redhat.yml
  when: ansible_os_family == "RedHat"

- name: Ensure right python is present
  ansible.builtin.package:
    name: "{% if timesketch_python_bin == 'python2' %}{{ python2_deps }}{% else %}{{ python_deps }}{% endif %}"
    state: present

- name: plaso pip dependencies
  ansible.builtin.pip:
    requirements: https://github.com/google/timesketch/raw/master/requirements.txt
    state: present
    executable: "{{ timesketch_python_pip }}"
  register: pkg_result
  until: pkg_result is success

- name: install timesketch with pip
  ansible.builtin.pip:
    name: "{{ item.n }}"
    version: "{{ item.v }}"
    state: present
    executable: "{{ timesketch_python_pip }}"
  with_items:
    - { n: timesketch, v: "{{ timesketch_version }}" }
    - { n: timesketch-api-client, v: "{{ timesketch_api_client_version }}" }
  register: pkg_result
  until: pkg_result is success

- name: Ensure /etc/timesketch directory exists
  ansible.builtin.file:
    dest: /etc/timesketch
    state: directory
    mode: '0750'
    owner: "{{ timesketch_user }}"
    group: root

- name: Ensure timesketch var directory exists
  ansible.builtin.file:
    dest: "{{ timesketch_root }}"
    state: directory
    mode: '0755'
    owner: "{{ timesketch_user }}"

- name: set up timesketch config
  ansible.builtin.template:
    src: timesketch.conf.j2
    dest: "{{ timesketch_conf }}"
    owner: "{{ timesketch_user }}"
    mode: '0600'
  notify:
    - restart supervisor

- include: configure-postgresql.yml

- name: Debug | timesketch_userlist
  ansible.builtin.debug: var=timesketch_userlist
## FIXME! idempotent? overwrite any existing user
- name: add timesketch user  # noqa no-changed-when
  ansible.builtin.command: "tsctl add_user --username {{ item.u }} --password {{ item.p }}"
  # args:
  #   creates: /var/timesketch/database.db
  with_items: "{{ timesketch_userlist }}"
  become: yes
  become_user: "{{ timesketch_user }}"

# - name: start timesketch
#   command: "tsctl runserver"

- name: set supervisor config to manage timesketch
  ansible.builtin.template: src=supervisord.ini dest={{ supervisor_confdir }}/{{ supervisor_targetconf }} mode=0644
  notify:
    - restart supervisor

- include: backup-script.yml

## FIXME! ansible bug. not working on xenial
- name: ensure supervisor service is enabled and started
  ansible.builtin.service: name={{ supervisor_service }} enabled=yes state=started

- include: plaso-uploading.yml
  when: timesketch_uploading is defined and timesketch_uploading

- include: plaso-process.yml
  when: timesketch_process is defined and timesketch_process
